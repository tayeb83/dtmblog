---
layout: default
title: "أول تطبيق ب Rails"
date: 2012-06-25 22:04
comments: true
rtl: true
categories: [rails, rake, gems]
---
في هذا الدرس سوف نقوم بانشاء أول تطبيق باستعمال رايلز. كل الأوامر التي سوف أنفذها تعمل بشكل طبيعي على نظام لينوكس أبونتو.

أول ما يجب القيام به هو انشاء ملف يحتوي على التطبيق الذي سوف نقوم بتطويره, على سبيل المثال "DemoApp", بعدها يجب التمركز في هذا الملف و ارسال هذا الأمر rails new first_app, أين first_app تمثل اسم التطبيق.

 ```مقطع من الأوامر من أجل انشاء تطبيق  
      
   mkdir DemoApp $
      cd DemoApp $
      rails new first_app $
      create  
      create  README
      create  .gitignore
      create  Rakefile
      create  config.ru
      create  Gemfile
      create  app
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/views/layouts/application.html.erb
      create  app/models
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
                                  .
                                  .
                                  . 	
 ```




    
    
اﻷمر الملاحظ بعد ارسال الأمر هو العدد الكبير من الملفات التي تم انشاءها. هذه البنية النموذجية للملفات تعتبر ميزة من عديد الميزات التي يتمتع بها رايلز, لأنها تسمح بالانتقال من الصفر الى تطبيق يعمل بشكل طبيعي حتى و ان كان التطبيق جد مصغر. زيادة على ذلك وبما أن هذه البنية مشتركة بين جميع التطبيقات التي تعمل برايلز فانه بامكانكم أخذ معالمكم بالاطلاع على تطبيقات أخرى مطورة على الويب و بالخصوص على Github. و فيمايلي ملخص عن كل الملفات التي تم انشاءها :

- الملف /app : يعتبر قلب التطبيق يحتوي على النماذج (models), الواجهات (views) ووحدات التحكم(controllers).
- الملف /config : يحتوي على ملفات التكوين الخاصة بالتطبيق.
- الملف /db: ملفات التعامل مع قاعدة البيانات.
- الملف /doc: الوثائق الخاصة بالتطبيق.
- الملف /lib:  وحدات المكتبة البرمجية.
- الملف /log: يحتوي على ملفات تتبع عمليات التطبيق.
- الملف /public: البيانات العامة التي يمكن الوصول اليها من طرف المتصفحات مثل الصور و أوراق الأنماط.
- الملف /script/rails : يحتوي على أمر نصي من أجل تسيير البرامج أو  فتح جلسة عمل وحدة التحكم.
- الملف /test: من أجل اختبار التطبيق.
- الملف /tmp: الملفات المؤقتة.
- الملف /vendor: البرامج الهامشية مثل ال gem أو ال plugins.
- الملف README: نبذة عن التطبيق.
- الملف Rakefile: المهام المساعدة و التي يمكن الوصول اليها عن طريق الأمر Rake.
- الملف Gemfile: يحتوي على الجيمات المستعملة و الاساسية للتطبيق.
- الملف config.ru: عبارة عن ملف التكوين لل Rake middleware.


#<img src="/images/application_view.png" title="البنية النموذجية للتطبيق بواسطة رايلز"/>


Bundler
------------- 
بعد انشاء التطبيق, نستعمل الBundler من أجل تثبيث و ادراج الجيمات المستعملة و التي يحتاجها التطبيق. الصورة التالية توضح مثال لملف Gemfile و الذي يحتوي على الجيمات التي سوف نقوم بتثبيثها عن طريق ال Bundler. أغلب سطور الملف عبارة عن تعليقات (#) و هذا من أجل المساعدة و اعطاء نظرة عن أغلب الجيمات التي يمكن استعمالها و اعطاء نظرة أيضا عن الكتابة المستعملة في ال Bundler. في هذه المرحلة من الدرس نحن  بحاجة إلا للجيمات الأساسية مثل : rails و جيم للتحكم في قاعدة بيانات اختيارية.(slqlite ,mysql أو postgresql).


<img src="/images/geditgemfile.png" title="الملف Gemfile عند فتحه لأول مرة"/>

اﻷن وقد اطلعتم على الجيمات و مكان وضعها يمكنكم ارسال اﻷمر الذي سوف يقوم بتثبيثها  : 

						             
```
      
   bundle install $

```


rails server
-------------

بفضل الأوامر rails new و bundle install عندنا الأن تطبيق يمكننا تشغيله, و لكن كيف ؟ لحسن الحظ رايلز يوفر تطبيق أو سكريبت يسمح بتشغيل حاجز ألي (web server) محلي لا يمكن الوصول اليه الا بواسطة اﻷلة المحلية.

```

rails server $
=> Booting WEBrick
=> Rails 3.2.1 application starting in development on http://0.0.0.0:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2012-07-04 13:32:49] INFO  WEBrick 1.3.1
[2012-07-04 13:32:49] INFO  ruby 1.9.3 (2012-04-20) [i686-linux]
[2012-07-04 13:32:49] INFO  WEBrick::HTTPServer#start: pid=18106 port=3000

```


بعد ارسال الأمر rails server يخبرنا رايلز كما هو موضح أنا التطبيق شغال على الباب 3000 على العنوان 0.0.0.0 . هذا العنوان يرشد الألة للانصات على كل العناوين IP المكونة على الالة, مثل 127.0.0.1 و المعروف ب localhost. يمكنكم ملاحظة النتيجة على العنوان http://localhost:3000, مثل الصورة التالية :


<img src="/images/railsserver.png" title="صفحة البداية بعد تشغيل الحاجز الالي"/>
